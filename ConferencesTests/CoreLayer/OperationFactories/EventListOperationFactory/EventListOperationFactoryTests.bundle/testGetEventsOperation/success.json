{
    "data": [
             {
             "type": "events",
             "id": "9",
             "attributes": {
             "name": "BackboneJS ",
             "kind": "conference",
             "starts_at": "2016-06-15T17:00:00.000Z",
             "ends_at": "2016-06-16T20:00:00.000Z",
             "updated_at": "2016-06-27T09:11:24.462Z",
             "brand": {
             "id": 11,
             "name": "stopListening",
             "description": "Указывает объекту object перестать слушать события.",
             "home_page": "",
             "logo": ""
             },
             "tech": [],
             "lectures": [
                          {
                          "id": 4,
                          "title": "Backbone.Model",
                          "description": "Модели — это самое сердце любого JavaScript-приложения. Они содержат как интерактивные данные, так и большую часть соответствующей логики: конвертации, валидации, вычисленные свойства и контроль доступа. Вы расширяете Backbone.Model методами своей предметной области, а Model предоставляет базовый набор функциональности по управлению изменениями.",
                          "tags": [],
                          "materials": [],
                          "speaker": {
                          "id": 6,
                          "first_name": "Николай",
                          "last_name": "Гоголь",
                          "bio": "Николай Васильевич Гоголь - известный русский драматург, публицист и прозаик, родился в Сорочинцах (Полтавская Губерния) 1 апреля 1809 года. Его отец Василий Афанасьевич, был очень богатым помещиком, у которого было около 400 крепостных крестьян, его мать была очень молодой и активной женщиной. \r\n\r\nБиография Николая ГоголяПисатель провел свое детство в условиях колоритного украинского быта, который он очень любил и хорошо запоминал. Он отлично знал жизнь панов и крестьян, в десять лет он начал учиться в Полтаве у учителя, а затем поступил в Нежинскую Гимназию высших наук. Исследователи говорят, что Гоголя нельзя было назвать успешным учеником, большинство предметов давалось ему с огромным трудом, но он выделялся среди сверстников прекрасной памятью, умением правильно использовать русский язык, а также в рисовании. \r\nГоголь активно занимался самообразованием, очень много писал, вместе с друзьями выписывал столичные журналы. Еще в молодости он начал много писать, пробовал себя и в прозе, и в поэзии. Гоголь сконцентрировал свое внимание на управлении имением после смерти отца. В 1828 году он окончил гимназию и отправился в Петербург. ",
                          "job": "Известный русский драматург, публицист и прозаик",
                          "company": "Rambler&CO",
                          "image": "http://stage01.it.rambler-co.ru/uploads/assets/speaker_image/attachment/15/thumbnail_98be46265df41a85.jpg",
                          "social_profiles": []
                          }
                          },
                          {
                          "id": 12,
                          "title": "Backbone.Model",
                          "description": "Модели — это самое сердце любого JavaScript-приложения. Они содержат как интерактивные данные, так и большую часть соответствующей логики: конвертации, валидации, вычисленные свойства и контроль доступа. Вы расширяете Backbone.Model методами своей предметной области, а Model предоставляет базовый набор функциональности по управлению изменениями.",
                          "tags": [],
                          "materials": [],
                          "speaker": {
                          "id": 6,
                          "first_name": "Николай",
                          "last_name": "Гоголь",
                          "bio": "Николай Васильевич Гоголь - известный русский драматург, публицист и прозаик, родился в Сорочинцах (Полтавская Губерния) 1 апреля 1809 года. Его отец Василий Афанасьевич, был очень богатым помещиком, у которого было около 400 крепостных крестьян, его мать была очень молодой и активной женщиной. \r\n\r\nБиография Николая ГоголяПисатель провел свое детство в условиях колоритного украинского быта, который он очень любил и хорошо запоминал. Он отлично знал жизнь панов и крестьян, в десять лет он начал учиться в Полтаве у учителя, а затем поступил в Нежинскую Гимназию высших наук. Исследователи говорят, что Гоголя нельзя было назвать успешным учеником, большинство предметов давалось ему с огромным трудом, но он выделялся среди сверстников прекрасной памятью, умением правильно использовать русский язык, а также в рисовании. \r\nГоголь активно занимался самообразованием, очень много писал, вместе с друзьями выписывал столичные журналы. Еще в молодости он начал много писать, пробовал себя и в прозе, и в поэзии. Гоголь сконцентрировал свое внимание на управлении имением после смерти отца. В 1828 году он окончил гимназию и отправился в Петербург. ",
                          "job": "Известный русский драматург, публицист и прозаик",
                          "company": "Rambler&CO",
                          "image": "http://stage01.it.rambler-co.ru/uploads/assets/speaker_image/attachment/15/thumbnail_98be46265df41a85.jpg",
                          "social_profiles": []
                          }
                          }
                          ]
             }
             },
             {
             "type": "events",
             "id": "4",
             "attributes": {
             "name": "JavaScript",
             "kind": "conference",
             "starts_at": "2016-06-18T16:00:00.000Z",
             "ends_at": "2016-06-18T18:30:00.000Z",
             "updated_at": "2016-06-27T09:08:21.513Z",
             "brand": {
             "id": 7,
             "name": "Введение в браузерные события",
             "description": "Для реакции на действия посетителя и внутреннего взаимодействия скриптов существуют события.",
             "home_page": "",
             "logo": ""
             },
             "tech": [],
             "lectures": [
                          {
                          "id": 8,
                          "title": "JavaScript обычно используется как встраиваемый язык ",
                          "description": "JavaScript обычно используется как встраиваемый язык для программного доступа к объектам приложений. Наиболее широкое применение находит в браузерах как язык сценариев для придания интерактивности веб-страницам.\r\n\r\nОсновные архитектурные черты: динамическая типизация, слабая типизация, автоматическое управление памятью, прототипное программирование, функции как объекты первого класса.\r\n\r\nНа JavaScript оказали влияние многие языки, при разработке была цель сделать язык похожим на Java, но при этом лёгким для использования непрограммистами. Языком JavaScript не владеет какая-либо компания или организация, что отличает его от ряда языков программирования, используемых в веб-разработке[~ 1][7].\r\n\r\nНазвание «JavaScript» является зарегистрированным товарным знаком компании Oracle Corporation[8].",
                          "tags": [],
                          "materials": [],
                          "speaker": {
                          "id": 3,
                          "first_name": "Джон",
                          "last_name": "Рокфеллер",
                          "bio": "Рокфеллер Джон Дэвисон – первый человек в мире, заработавший миллиард долларов. Так же Рокфеллер Д.Д. известен как благотворитель, основавший несколько университетов.\r\n\r\nДжон появился на свет в МША в многодетной протестантской семье. В основном воспитанием детей занималась мать. Она была религиозна, возможно и потому, что денег катастрофически не хватало и приходилось экономить. \r\n\r\nОтец Джона сначала работал в лесном хозяйстве, а затем решил стать коммивояжером. Именно он преподал мальчику первые уроки в области продаж и сформировал мировоззрение.\r\n\r\nС семи лет Джон стал зарабатывать свои собственные деньги – он помогал соседям, занимался птицеводством. С самого юного возраста он вел бухгалтерию.",
                          "job": "Бухгалтер",
                          "company": "Rambler&CO",
                          "image": "http://stage01.it.rambler-co.ru/uploads/assets/speaker_image/attachment/11/thumbnail_07400a653e080dc8.jpg",
                          "social_profiles": []
                          }
                          }
                          ]
             }
             },
             {
             "type": "events",
             "id": "6",
             "attributes": {
             "name": "React",
             "kind": "conference",
             "starts_at": "2016-06-19T11:30:00.000Z",
             "ends_at": "2016-06-19T12:00:00.000Z",
             "updated_at": "2016-06-27T09:11:01.271Z",
             "brand": {
             "id": 9,
             "name": "Строки. Функции и методы строк",
             "description": "Итак, о работе со строками мы немного поговорили, теперь поговорим о функциях и методах строк.",
             "home_page": "",
             "logo": ""
             },
             "tech": [],
             "lectures": [
                          {
                          "id": 10,
                          "title": "Создаем приложение на JavaScript с помощью React Native ",
                          "description": "Иногда я рисую себе граф того, как должна выглядеть архитектура современных систем и нахожу те моменты процесса разработки, которые могут быть улучшены и те практики, которые могут быть применены для улучшения этих процессов. После очередной такой итерации я еще раз убедился, что существуют потрясающие фреймворки и методологии для разработки и серверной и клиентской частей, но синхронизация данных между клиентом, сервером и базой данных работает не так, как того требуют современные реалии: быстрое реагирование на изменение состояния системы, распределенность и асинхронность обработки данных, повторное использование раннее обработанных данных.",
                          "tags": [],
                          "materials": [],
                          "speaker": {
                          "id": 2,
                          "first_name": "Антон",
                          "last_name": "Чехов",
                          "bio": "Родился в г. Таганроге 17 (29)января 1860г. Мать — Евгения Яковлевна Чехова (урождённая Морозова) (1835 — 1919 г.г.). \r\nБратья и сестры: Александр — литератор, лингвист; Николай — художник (1858 -1889 г.г.); Михаил — писатель, юрист; Иван — учитель (известный московский педагог); Мария — художница-пейзажистка. Все дети Чеховых были исключительно одарёнными, высокообразованными людьми.",
                          "job": "Писатель",
                          "company": "Rambler&Co",
                          "image": "http://stage01.it.rambler-co.ru/uploads/assets/speaker_image/attachment/10/thumbnail_bfc07d0a89e595ab.jpg",
                          "social_profiles": []
                          }
                          }
                          ]
             }
             },
             {
             "type": "events",
             "id": "5",
             "attributes": {
             "name": "Python",
             "kind": "conference",
             "starts_at": "2016-06-20T17:00:00.000Z",
             "ends_at": "2016-06-20T19:00:00.000Z",
             "updated_at": "2016-06-27T09:09:28.966Z",
             "brand": {
             "id": 8,
             "name": "Назначение обработчиков событий",
             "description": "Событию можно назначить обработчик, то есть функцию, которая сработает, как только событие произошло.",
             "home_page": "",
             "logo": ""
             },
             "tech": [],
             "lectures": [
                          {
                          "id": 9,
                          "title": "Python — высокоуровневый язык программирования",
                          "description": "Python в русском языке распространено название пито́н— высокоуровневый язык программирования общего назначения, ориентированный на повышение производительности разработчика и читаемости кода. Синтаксис ядра Python минималистичен. В то же время стандартная библиотека включает большой объём полезных функций.\r\n\r\nPython поддерживает несколько парадигм программирования, в том числе структурное, объектно-ориентированное, функциональное, императивное и аспектно-ориентированное. Основные архитектурные черты — динамическая типизация, автоматическое управление памятью, полная интроспекция, механизм обработки исключений, поддержка многопоточных вычислений и удобные высокоуровневые структуры данных. Код в Python организовывается в функции и классы, которые могут объединяться в модули (они в свою очередь могут быть объединены в пакеты).\r\n\r\nЭталонной реализацией Python является интерпретатор CPython, поддерживающий большинство активно используемых платформ[6]. Он распространяется под свободной лицензией Python Software Foundation License, позволяющей использовать его без ограничений в любых приложениях, включая проприетарные[7]. Есть реализации интерпретаторов для JVM (с возможностью компиляции), MSIL (с возможностью компиляции), LLVM и других. Проект PyPy предлагает реализацию Python на самом Python, что уменьшает затраты на изменения языка и постановку экспериментов над новыми возможностями.\r\n\r\nPython — активно развивающийся язык программирования, новые версии (с добавлением/изменением языковых свойств) выходят примерно раз в два с половиной года. Вследствие этого и некоторых других причин на Python отсутствуют стандарт ANSI, ISO или другие официальные стандарты, их роль выполняет CPython.",
                          "tags": [],
                          "materials": [],
                          "speaker": {
                          "id": 5,
                          "first_name": "Чарли",
                          "last_name": "Чаплин",
                          "bio": "Чарли Чаплин - лучший мировой комик, актер и режиссер. Чарли Чаплин (Charles Spencer Chaplin), являлся знаковой фигурой кинематографа во время «немой» эпохи. Британско-американский актёр комического жанра, режиссёр, а так же композитор. Пик славы Чарли Чаплина пришёлся на начало двадцатого века.\r\n\r\nЧарли впервые увидел свет 16 апреля 1889 г. Произошло это на берегах Темзы, в Лондоне. Ханна Чаплин и Чарльз Чаплин – ст. были артистами мюзик –холла.\r\n\r\nДетство Чарли совсем не было похоже на мюзикл, оно было полно нищеты и безысходности. Он, брат и их мама жили в Кэннингтоне. Работный дом принял Чарли, когда ему исполнилось 7 лет.",
                          "job": "Лучший мировой комик, актер и режиссер.",
                          "company": "Rambler&Co",
                          "image": "http://stage01.it.rambler-co.ru/uploads/assets/speaker_image/attachment/14/thumbnail_6872ff2dabe71e90.jpg",
                          "social_profiles": []
                          }
                          }
                          ]
             }
             },
             {
             "type": "events",
             "id": "8",
             "attributes": {
             "name": "BackboneJS",
             "kind": "conference",
             "starts_at": "2016-06-23T14:28:00.000Z",
             "ends_at": "2016-06-23T17:40:00.000Z",
             "updated_at": "2016-06-27T09:11:16.322Z",
             "brand": {
             "id": 10,
             "name": "Backbone.Events",
             "description": "Backbone.js придает структуру веб-приложениям с помощью моделей",
             "home_page": "",
             "logo": ""
             },
             "tech": [],
             "lectures": [
                          {
                          "id": 5,
                          "title": "Самое интересное о trigger",
                          "description": "Указывает объекту object перестать слушать события. Вызов метода stopListening без аргументов удалит все зарегистрированные обработчики. Также можно указать определённый объект, событие или обработчик.\r\nЭто список всех встроенных событий, которые может запускать Backbone.js. Вы также вольны запускать свои собственные события на моделях и представлениях, как считаете нужным. В объект Backbone тоже подмешан миксин событий Events, и вы можете использовать этот объект для глобальных событий вашего приложения.\r\nВызывает срабатывание события event (или группы событий — разделенных пробелами). Последующие аргументы в trigger будут переданы вместе с событием в обработчик.",
                          "tags": [],
                          "materials": [],
                          "speaker": {
                          "id": 4,
                          "first_name": "Сальвадор",
                          "last_name": "Дали",
                          "bio": "Сальвадор Дали появился на свет в испанском городе Фигерасе. Первенец, рожденный его матерью погиб в младенчестве, и на Сальвадора возлагались надежды на продолжение рода Дали. Может быть, именно поэтому уже в детстве мальчик отличался заносчивостью, был мало управляем, но имел все задатки необычного человека. Прилюдные истерики, работа на публику, постоянные капризы – все внимание доставалось Сальвадору.\r\n\r\nВсе эти качества очень мешали дружбе с обычными детьми, они относились к нему как к «белой вороне» и нередко были жестоки в своих шутках.\r\n\r\nРисование было тем искусством, которое примиряло будущего гения с окружающим миром. Начальное обучение проходило в обыкновенной художественной школе Фигераса. Потом, в 1914 году последовала Академия та же, в Фигерасе, где обучение длилось 4 года.",
                          "job": "Художник",
                          "company": "Rambler&Co",
                          "image": "http://stage01.it.rambler-co.ru/uploads/assets/speaker_image/attachment/13/thumbnail_5a5747ae68ff483d.jpg",
                          "social_profiles": []
                          }
                          },
                          {
                          "id": 11,
                          "title": "Самое интересное о trigger",
                          "description": "Указывает объекту object перестать слушать события. Вызов метода stopListening без аргументов удалит все зарегистрированные обработчики. Также можно указать определённый объект, событие или обработчик.\r\nЭто список всех встроенных событий, которые может запускать Backbone.js. Вы также вольны запускать свои собственные события на моделях и представлениях, как считаете нужным. В объект Backbone тоже подмешан миксин событий Events, и вы можете использовать этот объект для глобальных событий вашего приложения.\r\nВызывает срабатывание события event (или группы событий — разделенных пробелами). Последующие аргументы в trigger будут переданы вместе с событием в обработчик.",
                          "tags": [],
                          "materials": [],
                          "speaker": {
                          "id": 4,
                          "first_name": "Сальвадор",
                          "last_name": "Дали",
                          "bio": "Сальвадор Дали появился на свет в испанском городе Фигерасе. Первенец, рожденный его матерью погиб в младенчестве, и на Сальвадора возлагались надежды на продолжение рода Дали. Может быть, именно поэтому уже в детстве мальчик отличался заносчивостью, был мало управляем, но имел все задатки необычного человека. Прилюдные истерики, работа на публику, постоянные капризы – все внимание доставалось Сальвадору.\r\n\r\nВсе эти качества очень мешали дружбе с обычными детьми, они относились к нему как к «белой вороне» и нередко были жестоки в своих шутках.\r\n\r\nРисование было тем искусством, которое примиряло будущего гения с окружающим миром. Начальное обучение проходило в обыкновенной художественной школе Фигераса. Потом, в 1914 году последовала Академия та же, в Фигерасе, где обучение длилось 4 года.",
                          "job": "Художник",
                          "company": "Rambler&Co",
                          "image": "http://stage01.it.rambler-co.ru/uploads/assets/speaker_image/attachment/13/thumbnail_5a5747ae68ff483d.jpg",
                          "social_profiles": []
                          }
                          }
                          ]
             }
             },
             {
             "type": "events",
             "id": "11",
             "attributes": {
             "name": "React.js ",
             "kind": "conference",
             "starts_at": "2016-06-24T12:30:00.000Z",
             "ends_at": "2016-06-24T19:00:00.000Z",
             "updated_at": "2016-06-27T13:34:48.978Z",
             "brand": {
             "id": 13,
             "name": "Поток данных в React.js",
             "description": "Это важно знать, как данные путешествуют по дереву компонентов",
             "home_page": "",
             "logo": ""
             },
             "tech": {
             "id": 2,
             "name": "JS",
             "color": "#ebdb00"
             },
             "lectures": [
                          {
                          "id": 7,
                          "title": "Жизненный цикл компонента React.js",
                          "description": "React.js обычно создает и уничтожает компоненты во время процесса рендеринга. React.js предоставляет множество функций которые вы можете использовать в течении жизненного цикла ваших компонентов. Вы научитесь пониманию как управлять жизненным циклом компонента, чтобы избежать утечек памяти вашего приложения.\r\n\r\nReact.js заставит вас делать маленькие легковесные компоненты, выполняющие определенную работу. Вам потребуются другие компоненты для контроля ваших компонентов. Эта глава научит вас использованию ваших компонентов внутри других.\r\n\r\nМиксины в React.js дают возможность использовать одинаковый функционал в разных компонентах. Использование миксин — еще один путь раздробить ваши компоненты на маленькие, более управляемые части",
                          "tags": [],
                          "materials": [],
                          "speaker": {
                          "id": 3,
                          "first_name": "Джон",
                          "last_name": "Рокфеллер",
                          "bio": "Рокфеллер Джон Дэвисон – первый человек в мире, заработавший миллиард долларов. Так же Рокфеллер Д.Д. известен как благотворитель, основавший несколько университетов.\r\n\r\nДжон появился на свет в МША в многодетной протестантской семье. В основном воспитанием детей занималась мать. Она была религиозна, возможно и потому, что денег катастрофически не хватало и приходилось экономить. \r\n\r\nОтец Джона сначала работал в лесном хозяйстве, а затем решил стать коммивояжером. Именно он преподал мальчику первые уроки в области продаж и сформировал мировоззрение.\r\n\r\nС семи лет Джон стал зарабатывать свои собственные деньги – он помогал соседям, занимался птицеводством. С самого юного возраста он вел бухгалтерию.",
                          "job": "Бухгалтер",
                          "company": "Rambler&CO",
                          "image": "http://stage01.it.rambler-co.ru/uploads/assets/speaker_image/attachment/11/thumbnail_07400a653e080dc8.jpg",
                          "social_profiles": []
                          }
                          },
                          {
                          "id": 14,
                          "title": "Жизненный цикл компонента React.js",
                          "description": "React.js обычно создает и уничтожает компоненты во время процесса рендеринга. React.js предоставляет множество функций которые вы можете использовать в течении жизненного цикла ваших компонентов. Вы научитесь пониманию как управлять жизненным циклом компонента, чтобы избежать утечек памяти вашего приложения.\r\n\r\nReact.js заставит вас делать маленькие легковесные компоненты, выполняющие определенную работу. Вам потребуются другие компоненты для контроля ваших компонентов. Эта глава научит вас использованию ваших компонентов внутри других.\r\n\r\nМиксины в React.js дают возможность использовать одинаковый функционал в разных компонентах. Использование миксин — еще один путь раздробить ваши компоненты на маленькие, более управляемые части",
                          "tags": [],
                          "materials": [],
                          "speaker": {
                          "id": 3,
                          "first_name": "Джон",
                          "last_name": "Рокфеллер",
                          "bio": "Рокфеллер Джон Дэвисон – первый человек в мире, заработавший миллиард долларов. Так же Рокфеллер Д.Д. известен как благотворитель, основавший несколько университетов.\r\n\r\nДжон появился на свет в МША в многодетной протестантской семье. В основном воспитанием детей занималась мать. Она была религиозна, возможно и потому, что денег катастрофически не хватало и приходилось экономить. \r\n\r\nОтец Джона сначала работал в лесном хозяйстве, а затем решил стать коммивояжером. Именно он преподал мальчику первые уроки в области продаж и сформировал мировоззрение.\r\n\r\nС семи лет Джон стал зарабатывать свои собственные деньги – он помогал соседям, занимался птицеводством. С самого юного возраста он вел бухгалтерию.",
                          "job": "Бухгалтер",
                          "company": "Rambler&CO",
                          "image": "http://stage01.it.rambler-co.ru/uploads/assets/speaker_image/attachment/11/thumbnail_07400a653e080dc8.jpg",
                          "social_profiles": []
                          }
                          },
                          {
                          "id": 16,
                          "title": "Жизненный цикл компонента React.js",
                          "description": "React.js обычно создает и уничтожает компоненты во время процесса рендеринга. React.js предоставляет множество функций которые вы можете использовать в течении жизненного цикла ваших компонентов. Вы научитесь пониманию как управлять жизненным циклом компонента, чтобы избежать утечек памяти вашего приложения.\r\n\r\nReact.js заставит вас делать маленькие легковесные компоненты, выполняющие определенную работу. Вам потребуются другие компоненты для контроля ваших компонентов. Эта глава научит вас использованию ваших компонентов внутри других.\r\n\r\nМиксины в React.js дают возможность использовать одинаковый функционал в разных компонентах. Использование миксин — еще один путь раздробить ваши компоненты на маленькие, более управляемые части",
                          "tags": [],
                          "materials": [],
                          "speaker": {
                          "id": 3,
                          "first_name": "Джон",
                          "last_name": "Рокфеллер",
                          "bio": "Рокфеллер Джон Дэвисон – первый человек в мире, заработавший миллиард долларов. Так же Рокфеллер Д.Д. известен как благотворитель, основавший несколько университетов.\r\n\r\nДжон появился на свет в МША в многодетной протестантской семье. В основном воспитанием детей занималась мать. Она была религиозна, возможно и потому, что денег катастрофически не хватало и приходилось экономить. \r\n\r\nОтец Джона сначала работал в лесном хозяйстве, а затем решил стать коммивояжером. Именно он преподал мальчику первые уроки в области продаж и сформировал мировоззрение.\r\n\r\nС семи лет Джон стал зарабатывать свои собственные деньги – он помогал соседям, занимался птицеводством. С самого юного возраста он вел бухгалтерию.",
                          "job": "Бухгалтер",
                          "company": "Rambler&CO",
                          "image": "http://stage01.it.rambler-co.ru/uploads/assets/speaker_image/attachment/11/thumbnail_07400a653e080dc8.jpg",
                          "social_profiles": []
                          }
                          },
                          {
                          "id": 17,
                          "title": "Жизненный цикл компонента React.js",
                          "description": "React.js обычно создает и уничтожает компоненты во время процесса рендеринга. React.js предоставляет множество функций которые вы можете использовать в течении жизненного цикла ваших компонентов. Вы научитесь пониманию как управлять жизненным циклом компонента, чтобы избежать утечек памяти вашего приложения.\r\n\r\nReact.js заставит вас делать маленькие легковесные компоненты, выполняющие определенную работу. Вам потребуются другие компоненты для контроля ваших компонентов. Эта глава научит вас использованию ваших компонентов внутри других.\r\n\r\nМиксины в React.js дают возможность использовать одинаковый функционал в разных компонентах. Использование миксин — еще один путь раздробить ваши компоненты на маленькие, более управляемые части",
                          "tags": [],
                          "materials": [],
                          "speaker": {
                          "id": 3,
                          "first_name": "Джон",
                          "last_name": "Рокфеллер",
                          "bio": "Рокфеллер Джон Дэвисон – первый человек в мире, заработавший миллиард долларов. Так же Рокфеллер Д.Д. известен как благотворитель, основавший несколько университетов.\r\n\r\nДжон появился на свет в МША в многодетной протестантской семье. В основном воспитанием детей занималась мать. Она была религиозна, возможно и потому, что денег катастрофически не хватало и приходилось экономить. \r\n\r\nОтец Джона сначала работал в лесном хозяйстве, а затем решил стать коммивояжером. Именно он преподал мальчику первые уроки в области продаж и сформировал мировоззрение.\r\n\r\nС семи лет Джон стал зарабатывать свои собственные деньги – он помогал соседям, занимался птицеводством. С самого юного возраста он вел бухгалтерию.",
                          "job": "Бухгалтер",
                          "company": "Rambler&CO",
                          "image": "http://stage01.it.rambler-co.ru/uploads/assets/speaker_image/attachment/11/thumbnail_07400a653e080dc8.jpg",
                          "social_profiles": []
                          }
                          }
                          ]
             }
             },
             {
             "type": "events",
             "id": "10",
             "attributes": {
             "name": "React.js",
             "kind": "conference",
             "starts_at": "2016-06-29T12:00:00.000Z",
             "ends_at": "2016-06-29T13:30:00.000Z",
             "updated_at": "2016-06-27T09:11:35.917Z",
             "brand": {
             "id": 12,
             "name": "Введение в React.js",
             "description": "Когда-то давно у всех был единственный путь для создания веб-приложений. ",
             "home_page": "",
             "logo": ""
             },
             "tech": [],
             "lectures": [
                          {
                          "id": 6,
                          "title": "Так что же умеет этот ваш React? Целых две вещи",
                          "description": "Обновлять DOM-дерево.\r\nРеагировать на события.\r\nОн вообще ничего не знает про AJAX, роутинг, про структурирование и хранение ваших данных. Это не MVC фрэймворк. К нему можно применить только V из этой аббревиатуры. Такая узкая сфера применения дает вам свободу использования React в различных системах. По факту, он используется для рендеринга представлений в нескольких популярных MVC фрэймворках.\r\n\r\nОтображение страницы каждый раз с сохранением состояния вот что невыносимо медленно в JavaScript. К счастью, React имеет прекрасную систему рендеринга.\r\n\r\nКак навороченный игровой 3D движок, React построен вокруг функций рендеринга, которые берут состояние мира и транслируют его в виртуальное представление конечной страницы. Когда React узнает о смене состояние, он повторно запускает функции, чтобы определить новое виртуальное состояние страницы, потом автоматически транслирует результат в изменения DOM-дерева, чтобы отразить новое состояние.\r\n\r\nКажется, что это должно быть медленнее, чем обычный JavaScript подход к обновлению каждого элемента. Но по факту у React есть эффективный алгоритм для определения разницы между текущим состоянием страницы и новым. К тому же, он вносит изменения в DOM только там, где это реально необходимо.\r\n\r\nПрирост производительности происходит из-за минимизации перекомпоновки элементов и DOM мутаций, которые обычно в плохой производительности и виновны.",
                          "tags": [],
                          "materials": [],
                          "speaker": {
                          "id": 1,
                          "first_name": "Николай",
                          "last_name": "Миклухо-Маклай",
                          "bio": "Русский этнограф, антрополог, биолог и путешественник, изучавший коренное население Юго-Восточной Азии, Австралии и Океании (1870—1880-е годы), в том числе папуасов северо-восточного берега Новой Гвинеи, называемого Берегом Маклая.",
                          "job": "Этнограф, антрополог, биолог и путешественник",
                          "company": "Rambler&CO",
                          "image": "http://stage01.it.rambler-co.ru/uploads/assets/speaker_image/attachment/9/thumbnail_add884cc770e1ad0.jpg",
                          "social_profiles": [
                                              {
                                              "network": "Facebook",
                                              "link": "http://facebook.com/n.maclay"
                                              }
                                              ]
                          }
                          },
                          {
                          "id": 13,
                          "title": "Так что же умеет этот ваш React? Целых две вещи",
                          "description": "Обновлять DOM-дерево.\r\nРеагировать на события.\r\nОн вообще ничего не знает про AJAX, роутинг, про структурирование и хранение ваших данных. Это не MVC фрэймворк. К нему можно применить только V из этой аббревиатуры. Такая узкая сфера применения дает вам свободу использования React в различных системах. По факту, он используется для рендеринга представлений в нескольких популярных MVC фрэймворках.\r\n\r\nОтображение страницы каждый раз с сохранением состояния вот что невыносимо медленно в JavaScript. К счастью, React имеет прекрасную систему рендеринга.\r\n\r\nКак навороченный игровой 3D движок, React построен вокруг функций рендеринга, которые берут состояние мира и транслируют его в виртуальное представление конечной страницы. Когда React узнает о смене состояние, он повторно запускает функции, чтобы определить новое виртуальное состояние страницы, потом автоматически транслирует результат в изменения DOM-дерева, чтобы отразить новое состояние.\r\n\r\nКажется, что это должно быть медленнее, чем обычный JavaScript подход к обновлению каждого элемента. Но по факту у React есть эффективный алгоритм для определения разницы между текущим состоянием страницы и новым. К тому же, он вносит изменения в DOM только там, где это реально необходимо.\r\n\r\nПрирост производительности происходит из-за минимизации перекомпоновки элементов и DOM мутаций, которые обычно в плохой производительности и виновны.",
                          "tags": [],
                          "materials": [],
                          "speaker": {
                          "id": 1,
                          "first_name": "Николай",
                          "last_name": "Миклухо-Маклай",
                          "bio": "Русский этнограф, антрополог, биолог и путешественник, изучавший коренное население Юго-Восточной Азии, Австралии и Океании (1870—1880-е годы), в том числе папуасов северо-восточного берега Новой Гвинеи, называемого Берегом Маклая.",
                          "job": "Этнограф, антрополог, биолог и путешественник",
                          "company": "Rambler&CO",
                          "image": "http://stage01.it.rambler-co.ru/uploads/assets/speaker_image/attachment/9/thumbnail_add884cc770e1ad0.jpg",
                          "social_profiles": [
                                              {
                                              "network": "Facebook",
                                              "link": "http://facebook.com/n.maclay"
                                              }
                                              ]
                          }
                          }
                          ]
             }
             },
             {
             "type": "events",
             "id": "7",
             "attributes": {
             "name": "AngularJS",
             "kind": "conference",
             "starts_at": "2016-07-23T13:30:00.000Z",
             "ends_at": "2016-07-23T16:00:00.000Z",
             "updated_at": "2016-06-27T09:12:55.022Z",
             "brand": {
             "id": 1,
             "name": "Rambler&Co Backend Conf",
             "description": "Расширенной формой шаблонов являются тегированные шаблонные строки.",
             "home_page": "",
             "logo": ""
             },
             "tech": [],
             "lectures": [
                          {
                          "id": 15,
                          "title": "Разделенные амперсандами",
                          "description": "\r\nЭта функция не зависит от SearchPage, потому она реализуется скорее как свободная функция, а не как метод. Сначала она создает строку запроса, основываясь на параметрах данных. Исходя из них, она преобразовывает данные в требуемый формат строки: пары name=value, разделенные амперсандами. Синтаксис => соответствует стрелочной функции, еще одному недавнему дополнению в JavaScript. Стрелочные функции предоставляют более лаконичный синтаксис для создания анонимных функций.\r\n\r\nСохраните изменения, вернитесь к симулятору, перезагрузите страницу с помощью комбинации Cmd+R и нажмите кнопку ‘Go’. На экране отобразится индикатор загрузки. Обратите внимание на консоль Xcode:На экране показан индикатор активности, а в логе появляется URL для требуемого запроса. Откройте этот URL в браузере, чтобы увидеть результат: большой JSON-объект. Но не волнуйтесь, вам не нужно будет вникать в него. Сейчас мы добавим код и проведем его парсинг. \r\n\r\nПримечание: Данное приложение использует для поиска недвижимости Nestoria API. JSON-ответ, который приходит из API, весьма незамысловат. Так или иначе, вы всегда можете просмотреть документацию на предмет предполагаемого формата URL-запросов и ответов. \r\n\r\nСледующий шаг – выполнить запрос из приложения.",
                          "tags": [],
                          "materials": [],
                          "speaker": {
                          "id": 4,
                          "first_name": "Сальвадор",
                          "last_name": "Дали",
                          "bio": "Сальвадор Дали появился на свет в испанском городе Фигерасе. Первенец, рожденный его матерью погиб в младенчестве, и на Сальвадора возлагались надежды на продолжение рода Дали. Может быть, именно поэтому уже в детстве мальчик отличался заносчивостью, был мало управляем, но имел все задатки необычного человека. Прилюдные истерики, работа на публику, постоянные капризы – все внимание доставалось Сальвадору.\r\n\r\nВсе эти качества очень мешали дружбе с обычными детьми, они относились к нему как к «белой вороне» и нередко были жестоки в своих шутках.\r\n\r\nРисование было тем искусством, которое примиряло будущего гения с окружающим миром. Начальное обучение проходило в обыкновенной художественной школе Фигераса. Потом, в 1914 году последовала Академия та же, в Фигерасе, где обучение длилось 4 года.",
                          "job": "Художник",
                          "company": "Rambler&Co",
                          "image": "http://stage01.it.rambler-co.ru/uploads/assets/speaker_image/attachment/13/thumbnail_5a5747ae68ff483d.jpg",
                          "social_profiles": []
                          }
                          }
                          ]
             }
             }
             ]
}